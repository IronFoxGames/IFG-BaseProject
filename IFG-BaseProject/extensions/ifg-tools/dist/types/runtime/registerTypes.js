"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerTypes = void 0;
const TSpriteResourcePath_1 = require("./TSpriteResourcePath");
const TTextureResourcePath_1 = require("./TTextureResourcePath");
const TJsonResourcePath_1 = require("./TJsonResourcePath");
const TPrefabResourcePath_1 = require("./TPrefabResourcePath");
const TIdentifier_1 = require("./TIdentifier");
const TReference_1 = require("./TReference");
const identifiers_1 = require("./identifiers");
function registerTypes(fn) {
    fn(TSpriteResourcePath_1.Kind, TSpriteResourcePath_1.Validate);
    fn(TTextureResourcePath_1.Kind, TTextureResourcePath_1.Validate);
    fn(TJsonResourcePath_1.Kind, TJsonResourcePath_1.Validate);
    fn(TPrefabResourcePath_1.Kind, TPrefabResourcePath_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Item"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Item"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Currency"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Currency"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Booster"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Booster"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Powerup"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Powerup"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Task"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Task"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Dialogue"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Dialogue"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Chapter"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Chapter"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Task"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Task"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("CatalogItem"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("CatalogItem"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("UpsellItem"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("UpsellItem"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Prop"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Prop"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Node"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Node"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Level"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Level"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("PropTag"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("PropTag"), TReference_1.Validate);
    fn((0, TIdentifier_1.IdentifierKind)("Tutorial"), TIdentifier_1.Validate);
    fn((0, TReference_1.ReferenceKind)("Tutorial"), TReference_1.Validate);
    (0, identifiers_1.isa)("Currency", "Item");
    (0, identifiers_1.isa)("Booster", "Item");
    (0, identifiers_1.isa)("Powerup", "Item");
    (0, identifiers_1.isa)("Task", "Item");
    (0, identifiers_1.isa)("Prop", "Item");
}
exports.registerTypes = registerTypes;
